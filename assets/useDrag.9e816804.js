var C=Object.defineProperty;var P=(n,e,r)=>e in n?C(n,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):n[e]=r;var o=(n,e,r)=>(P(n,typeof e!="symbol"?e+"":e,r),r);import{w as I,u as h,r as O,c as S,a as m,b}from"./connectDragRef.a5dc16fa.js";import{v as g,x as D,y as p,q as a,u as i,w as u}from"./vendor.5fb5b3db.js";let d=!1,l=!1;class M{constructor(e){o(this,"internalMonitor");o(this,"sourceId",null);this.internalMonitor=e.getMonitor()}receiveHandlerId(e){this.sourceId=e}getHandlerId(){return this.sourceId}canDrag(){g(!d,"You may not call monitor.canDrag() inside your canDrag() implementation. Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source-monitor");try{return d=!0,this.internalMonitor.canDragSource(this.sourceId)}finally{d=!1}}isDragging(){if(!this.sourceId)return!1;g(!l,"You may not call monitor.isDragging() inside your isDragging() implementation. Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source-monitor");try{return l=!0,this.internalMonitor.isDraggingSource(this.sourceId)}finally{l=!1}}subscribeToStateChange(e,r){return this.internalMonitor.subscribeToStateChange(e,r)}isDraggingSource(e){return this.internalMonitor.isDraggingSource(e)}isOverTarget(e,r){return this.internalMonitor.isOverTarget(e,r)}getTargetIds(){return this.internalMonitor.getTargetIds()}isSourcePublic(){return this.internalMonitor.isSourcePublic()}getSourceId(){return this.internalMonitor.getSourceId()}subscribeToOffsetChange(e){return this.internalMonitor.subscribeToOffsetChange(e)}canDragSource(e){return this.internalMonitor.canDragSource(e)}canDropOnTarget(e){return this.internalMonitor.canDropOnTarget(e)}getItemType(){return this.internalMonitor.getItemType()}getItem(){return this.internalMonitor.getItem()}getDropResult(){return this.internalMonitor.getDropResult()}didDrop(){return this.internalMonitor.didDrop()}getInitialClientOffset(){return this.internalMonitor.getInitialClientOffset()}getInitialSourceClientOffset(){return this.internalMonitor.getInitialSourceClientOffset()}getSourceClientOffset(){return this.internalMonitor.getSourceClientOffset()}getClientOffset(){return this.internalMonitor.getClientOffset()}getDifferenceFromInitialOffset(){return this.internalMonitor.getDifferenceFromInitialOffset()}}class y{constructor(e){o(this,"hooks",I({dragSource:(e,r)=>{this.clearDragSource(),this.dragSourceOptions=r||null,p(e)?this.dragSourceRef=e:this.dragSourceNode=e,this.reconnectDragSource()},dragPreview:(e,r)=>{this.clearDragPreview(),this.dragPreviewOptions=r||null,p(e)?this.dragPreviewRef=e:this.dragPreviewNode=e,this.reconnectDragPreview()}}));o(this,"handlerId",null);o(this,"dragSourceRef",null);o(this,"dragSourceNode");o(this,"dragSourceOptionsInternal",null);o(this,"dragSourceUnsubscribe");o(this,"dragPreviewRef",null);o(this,"dragPreviewNode");o(this,"dragPreviewOptionsInternal",null);o(this,"dragPreviewUnsubscribe");o(this,"lastConnectedHandlerId",null);o(this,"lastConnectedDragSource",null);o(this,"lastConnectedDragSourceOptions",null);o(this,"lastConnectedDragPreview",null);o(this,"lastConnectedDragPreviewOptions",null);o(this,"backend");this.backend=e}receiveHandlerId(e){this.handlerId!==e&&(this.handlerId=e,this.reconnect())}get connectTarget(){return this.dragSource}get dragSourceOptions(){return this.dragSourceOptionsInternal}set dragSourceOptions(e){this.dragSourceOptionsInternal=e}get dragPreviewOptions(){return this.dragPreviewOptionsInternal}set dragPreviewOptions(e){this.dragPreviewOptionsInternal=e}reconnect(){const e=this.reconnectDragSource();this.reconnectDragPreview(e)}reconnectDragSource(){const e=this.dragSource,r=this.didHandlerIdChange()||this.didConnectedDragSourceChange()||this.didDragSourceOptionsChange();return r&&this.disconnectDragSource(),this.handlerId?e?(r&&(this.lastConnectedHandlerId=this.handlerId,this.lastConnectedDragSource=e,this.lastConnectedDragSourceOptions=this.dragSourceOptions,this.dragSourceUnsubscribe=this.backend.connectDragSource(this.handlerId,e,this.dragSourceOptions)),r):(this.lastConnectedDragSource=e,r):r}reconnectDragPreview(e=!1){const r=this.dragPreview,t=e||this.didHandlerIdChange()||this.didConnectedDragPreviewChange()||this.didDragPreviewOptionsChange();if(t&&this.disconnectDragPreview(),!!this.handlerId){if(!r){this.lastConnectedDragPreview=r;return}t&&(this.lastConnectedHandlerId=this.handlerId,this.lastConnectedDragPreview=r,this.lastConnectedDragPreviewOptions=this.dragPreviewOptions,this.dragPreviewUnsubscribe=this.backend.connectDragPreview(this.handlerId,r,this.dragPreviewOptions))}}didHandlerIdChange(){return this.lastConnectedHandlerId!==this.handlerId}didConnectedDragSourceChange(){return this.lastConnectedDragSource!==this.dragSource}didConnectedDragPreviewChange(){return this.lastConnectedDragPreview!==this.dragPreview}didDragSourceOptionsChange(){return!D(this.lastConnectedDragSourceOptions,this.dragSourceOptions)}didDragPreviewOptionsChange(){return!D(this.lastConnectedDragPreviewOptions,this.dragPreviewOptions)}disconnectDragSource(){this.dragSourceUnsubscribe&&(this.dragSourceUnsubscribe(),this.dragSourceUnsubscribe=void 0)}disconnectDragPreview(){this.dragPreviewUnsubscribe&&(this.dragPreviewUnsubscribe(),this.dragPreviewUnsubscribe=void 0,this.dragPreviewNode=null,this.dragPreviewRef=null)}get dragSource(){return this.dragSourceNode||this.dragSourceRef&&this.dragSourceRef.value}get dragPreview(){return this.dragPreviewNode||this.dragPreviewRef&&this.dragPreviewRef.value}clearDragSource(){this.dragSourceNode=null,this.dragSourceRef=null}clearDragPreview(){this.dragPreviewNode=null,this.dragPreviewRef=null}}class R{constructor(e,r,t){this.spec=e,this.monitor=r,this.connector=t}beginDrag(){const e=this.spec,r=this.monitor;let t=null;return typeof e.item=="object"?t=e.item:typeof e.item=="function"?t=e.item(r):t={},t!=null?t:null}canDrag(){const e=this.spec,r=this.monitor;return typeof e.canDrag=="boolean"?e.canDrag:typeof e.canDrag=="function"?e.canDrag(r):!0}isDragging(e,r){const t=this.spec,s=this.monitor,{isDragging:c}=t;return c?c(s):r===e.getSourceId()}endDrag(){const e=this.spec,r=this.monitor,t=this.connector,{end:s}=e;s&&s(r.getItem(),r),t.reconnect()}}function T(n,e,r){const t=a(()=>new R(i(n),i(e),i(r)));return u(()=>{t.value.spec=i(n)}),t}function H(n){return a(()=>{const e=i(n).type;return g(e!=null,"spec.type must be defined"),e})}function U(n,e,r){const t=h(),s=T(n,e,r),c=H(n);u(function(v){if(i(c)!=null){const[f,w]=O(i(c),i(s),i(t));i(e).receiveHandlerId(f),i(r).receiveHandlerId(f),v(w)}})}function k(){const n=h();return a(()=>new M(i(n)))}function N(n,e){const r=h(),t=a(()=>new y(i(r).getBackend()));return u(s=>{t.value.dragSourceOptions=i(n)||null,i(t).reconnect(),s(()=>{t.value.disconnectDragSource()})}),u(s=>{t.value.dragPreviewOptions=i(e)||null,i(t).reconnect(),s(()=>{t.value.disconnectDragPreview()})}),t}function F(n,e){return a(()=>S(i(n).hooks.dragSource(),i(e).options))}function q(n,e){return a(()=>S(i(n).hooks.dragPreview(),i(e).previewOptions))}function B(n){const e=b(n);g(!i(e).begin,"useDrag::spec.begin was deprecated in v14. Replace spec.begin() with spec.item(). (see more here - https://react-dnd.github.io/react-dnd/docs/api/use-drag)");const r=k(),t=N(a(()=>i(e).options),a(()=>i(e).previewOptions));return U(e,r,t),[m(a(()=>i(e).collect||(()=>({}))),r,t),F(t,e),q(t,e)]}export{B as u};
